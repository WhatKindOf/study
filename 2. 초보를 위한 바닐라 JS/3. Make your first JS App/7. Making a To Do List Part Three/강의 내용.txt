이번 시간에 해볼 것은
ToDo 리스트에서 삭제버튼을 눌러 삭제하는 기능이다.

해야할 것은 두가지!

1. local storage에서 지워야하고,
2. html에서도 안보이게 해야한다.


먼저 HTML 부분을 지울 것이다.
해당 <li>를 지울것임

삭제 버튼에 EventListener를 추가할 것이다.
근데 단순히 클릭을 기다린다고 추가해놓으면

여러 삭제 버튼 중 어떤 버튼의 클릭인지 모른다.
따라서 어떤 버튼이 클릭되었는지 알아야 한다.

그래서 소개하는 것은 '.target'

event.target이라는 기능이 있는데 
이를 이용하게 되면 크롬 검사창의 console에서
<button>이 계속 뜬다.

근데 또 문제점은 누가 부모인지 알 수가 없다.
이 버튼의 부모로는 <li>에 id가 있다.
 
const btn = event.target;
const li = btn.parentNode;
toDoList.removeChild(li);

이렇게 하게되면 HTML상에서는 삭제가 성공적으로 이루어진다.

단, local Storage에는 아직 남아있기 때문에
새로고침하게 되면 삭제된 것들이 다시 HTML상에 보여지게 된다.

이를 막기 위해서는 local Storage에서도 확실히 지워줘야한다.

array의 함수 중 filter라는 것을 활용할 텐데
filter는 array의 모든 아이템을 통해 함수를 실행하고
true인 아이템들만 가지고 새로운 array를 만든다
(array의 모든 아이템을 가지고 함수를 실행하는 것은 forEach와 같으나
filter는 실행하는 함수의 결과값인 것들로만 구성하여 array를 반환한다.)

parseInt는 string을 숫자로 바꿀 수 있다.

삭제하는 방법
1. 삭제 버튼을 누른 <li>를 HTML상에서 삭제
2. 삭제된 <li>가 가지는 id를 비교하여 
해당 id를 가지지 않는 것들로 다시 배열을 만들고
3. 기존 배열에 새로운 배열을 덮어쓰기하면
4. 삭제 완료!

예를 들어
<li id="1"></li>
<li id="2"></li>
<li id="3"></li>
<li id="4"></li>

여기서 id가 2인 <li>를 지웠다고 하면
일단 id가 2인 <li>를 HTML상에서 지우고
기존 배열에서 id가 2가 아닌 애들만(id=1,3,4) 찾아서 새로운 배열을 생성한다
그리고 기존 배열을 새로운 배열로 덮어쓴다.

※ 근데 문제점! 기존 배열이 const로 생성되었기 때문에 바꿀 수 없다.
그래서 기존 배열을 const대신 let으로 바꿔준다.  
