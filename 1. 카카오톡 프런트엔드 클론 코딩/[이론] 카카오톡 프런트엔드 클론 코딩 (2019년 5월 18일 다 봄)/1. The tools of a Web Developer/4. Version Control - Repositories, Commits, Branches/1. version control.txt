3가지 컨셉을 이해하자!

1. Repository : 소스코드를 저장하는 폴더

※ Repository는 폴더이고, 깃은 이 것을 추적하는 시스템

2. Commit : 파일 변경 기록. (깃이 기록한 변경사항 기록함, 프로젝트의 상황창)

ex. "헤더 생성" , "푸터 생성" , "채팅창 생성" 과 같은 변경사항이 있을 때 
이 변경사항의 내용은 '카카오 채팅창을 만든 것임' 이라고 기록하는 것

3. Branch : 나뭇가지와도 같은 것, 마스터의 복사판, 새 기능을 테스트해보고 싶을때

처음 디폴트로 생성되는 것은 master

master branch에는 모든 commit이 반영.

별도로 생성하지 않는다면 모든 commit은 마스터에 축적

그래서 새로운 기능을 추가해보고 싶을 때 새로운 브랜치를 만들어서 거기에 축적
새로운 브랜치는 마스터 브랜치의 복제본 (똑같은 소스코드)

과정
(1) 브랜치를 만들고
(2) 마스터는 그대로 내버려둔다
(3) 브랜치에서 새로운 기능에 대해 개발완료 후 테스트까지 마쳐서 정상작동 확인
(4) 브랜치를 마스터에 결합