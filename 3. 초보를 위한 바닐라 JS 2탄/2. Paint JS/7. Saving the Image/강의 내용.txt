canvas는 pixel을 다루는 거니까 기본적으로 image를 만든다.
그래서 download와 save 파트는 이미 내장되어 있다.

다만 문제점은 아무것도 없는 배경에
그냥 paint를 하고 저장하게 되면
배경이 투명색으로 저장된다.

이는 canvas의 배경색을 설정하지 않아서
실제 pixel manipulator canvas에 background를 설정하지 않았다.
HTML의 background만 설정했었다.

그래서 canvas가 load 되자마자 background가 설정되도록 해야함.

가장 상단부분에 
ctx.fillStyle = "white";
ctx.fillRect(0, 0, CANVAS_SIZE, CANVAS_SIZE);
를 해서 다른 무엇보다 먼저 수행되도록 한다.

그래서 canvas의 기본 배경은 흰색이 되도록 한다.


만약 canvas에서 오른쪽클릭 메뉴 (context menu) 를 사용하고 싶지 않다면

function handleCM(event) {
	event.preventDefault( );
}

canvas.addEventListener("contextmenu", handleCM);

위와 같이 작성해서 막을 수 있다.


그리고 save 버튼을 클릭하면 이미지 저장할 수 있게 하고 싶다.

먼저, canvas의 데이터를 image처럼 얻는 것.
HTMLCanvasElementtoDataURL( )
이 메소드는 (기본적으로 PNG로 설정된) type parameter에 의해 
지정된 포맷의 이미지 표현을 포함한 data URL을 반환함.

const image = canvas.toDataURL( );

data URL을 반환하는데 괄호 안에 "image/jpeg" 같은 값을 안 넣으면 기본값은 png로 저장됨.

이제 해줄 것은 링크를 만들어 줄거임. (존재하지 않는 링크같은 것)

const link = document.createElement("a");
<a> 태그를 생성하는 코드

download는 <a> (anchor) 태그의 속성인데
browser에게 이 링크로 가는 대신 URL을 다운로드하라고 지시하는 것.
우리는 링크로 가는 거 말고 다운로드를 원하기 때문에.
link.href = image;     <a>태그의 href 속성에 image URL 값을 줘야함.
link.download = "PaintJS";       download 속성에는 저장되는 파일의 이름을 적어주면 된다.


저장하고 나면 저장 버튼을 클릭한 이 "클릭"을 가짜로 만들면 된다.
link.click( );

