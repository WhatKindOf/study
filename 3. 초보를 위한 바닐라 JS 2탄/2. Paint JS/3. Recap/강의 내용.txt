이전 문제점의 원인은!
캔버스에 사이즈를 안 줘서 그런 것 같다.

canvas element는 두 개의 사이즈를 가져야함.
CSS 사이즈랑
pixel manipulating 사이즈


기본적으로 우리는 CSS로 캔버스를 만든다.
또한 캔버스를 pixel을 다룰 수 있는 element로서 만드는 거니까
element에 width와 height를 지정해줘야 함.

그러니까 다시말해,
CSS에서는 HTML에 표현하기 위한 사이즈
JS에서는 element를 다루기 위한 사이즈

app.js 파일에
canvas.width랑 canvas.height에 값을 주니까
잘 그려진다.


원인. pixel modifier에 사이즈를 주지 않아서 그런 거였다.


복습시간!!!!

canvas는 어마어마한 능력을 갖고 있는 HTML5의 한 요소.
그 능력들은 픽셀들을 다루는 것.

CSS에서 canvas에 width와 height를 줘야 깔끔하게 보인다.
픽셀을 다루는 윈도우가 얼마나 큰지 canvas에게 알려주기 위해서
width와 height 사이즈를 주는 것.

canvas의 context를 갖는 것도 필요함.
canvas의 context는 픽셀들을 컨트롤하는 것.

strokeStyle은 우리가 그릴 선들이 모두 이 색을 갖는다고 말해주는 것.
strokeStyle = "#2c2c2c";
이 context안에 있는 모든 선들은 #2c2c2c 색상을 갖는다.

lineWidth는 그 선의 너비가 2.5px.


클릭하지 않고 마우스를 움직였을 때는
path를 시작하는 것.
path는 선이다.
moveTo : path를 만들면 마우스의 x y 좌표로 path를 옮기는 것.

그건 내가 마우스를 움직이는 모든 순간에 path를 만든다는 거다.
path의 시작점은 내 마우스가 있는 곳.

마우스가 움직이는 동안 많은 path들이 만들어졌는데,
어떠한 path들도 사용되어지지는 않았다.

클릭을 하게 되면 startPainting이 된다.
클릭을 한 상태에서 마우스를 움직이게 되면
lineTo함수가 실행되어서, 
path의 이전 위치에서 지금 현재 위치까지 선을 만든다.

stroke : 획을 긋는다.

lineTo( )와 stroke( )는 마우스를 움직이는 내내 발생하는 것.
끝나는 것이 아니다.

stroke( ) 이후에 closePath( )를 넣게 되면
시작점은 고정된 상태에서 여러 직선이 그려지게 된다.

